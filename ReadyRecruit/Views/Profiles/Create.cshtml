@model ReadyRecruit.Models.Profile

@{
    ViewBag.Title = "Create Profile";
}

@*<h2>Create Profile</h2>*@


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <section id="viewProfile">
        <h1>Tell Us About Yourself</h1>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row profileCreate">

            Hi.  My name is

                <div class="form-group">
                    @Html.EditorFor(model => model.FName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FName, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.EditorFor(model => model.LName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LName, "", new { @class = "text-danger" })
                </div>

            .  I am a

            <div class="form-group">
                @Html.DropDownList("GenderID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GenderID, "", new { @class = "text-danger" })
            </div>

            who was born on

            <div class="form-group">
                @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
            </div>

            and am

            <div class="form-group">
                @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
            </div>

            inches tall and weigh

            <div class="form-group">
                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
            </div>

            pounds.  I

            <div class="form-group">
                @Html.DropDownList("EducationID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EducationID, "", new { @class = "text-danger" })
            </div>

            and am

            <div class="form-group">
                @Html.DropDownList("MaritalStatID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MaritalStatID, "", new { @class = "text-danger" })
            </div>

            with

            <div class="form-group">
                @Html.EditorFor(model => model.Dependents, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Dependents, "", new { @class = "text-danger" })
            </div>

            <span><a href="#" id="dependents" onclick="definition">dependents</a></span>

            .  I have

            <div  class="form-group">
                <select name="PriorServiceID">
                    <option value="1">no</option>
                    <option value="2">some</option>
                </select>
            </div>

            prior service in the military.

        </div>

        <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            <button type="button" class="btn btn-default">
                @Html.ActionLink("Go Back", "Login", "Account")
            </button>

        </div>

        @*<div class="ViewProfileSelections row">
                <button type="button" class="btn btn-default">
                    @Html.ActionLink("Update Profile", "Edit", new { id = item.ProfileID })
                </button>
                <button type="button" class="btn btn-default">
                    @Html.ActionLink("Get Started!", "StepPage", "Mainsteps", protocol: null, hostName: null, fragment: null, routeValues: null, htmlAttributes: null)
                </button>
                @*<button type="button" class="btn btn-default">
                        @Html.ActionLink("Delete", "Delete", new { id = item.ProfileID })
                    </button>
            </div>*@

    </section>

}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
